{"ast":null,"code":"var _jsxFileName = \"/Users/yunshine/Code/yunshine/React-101/React-Apps/mern-authentication/client/src/Components/Todos.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport TodoItem from './TodoItem';\nimport Message from './Message';\nimport TodoService from '../Services/TodoService';\nimport { AuthContext } from '../Context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Todos = props => {\n  _s();\n\n  const [todo, setTodo] = useState({\n    name: \"\"\n  });\n  const [todos, setTodos] = useState([]);\n  const [message, setMessage] = useState(null);\n  const AuthContext = useContext(AuthContext);\n  useEffect(() => {\n    TodoService.getTodos().then(data => {\n      setTodos(data.todos);\n    });\n  }, []);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    TodoService.postTodo(todo).then(data => {\n      const {\n        message\n      } = data;\n      resetForm();\n\n      if (!message.msgError) {\n        TodoService.getTodos().then(getData => {\n          setTodos(getData.todos);\n          setMessage(message);\n        });\n      } else if (message.msgBody === \"unauthorized\") {\n        setMessage(message);\n        AuthContext.setUser({\n          username: \"\",\n          role: \"\"\n        });\n        AuthContext.setIsAuthenticaged(false);\n      } else {\n        setMessage(message);\n      }\n    });\n  };\n\n  const onChange = e => {\n    setTodo({\n      name: e.target.value\n    });\n  };\n\n  const resetForm = () => {\n    setTodo({\n      name: \"\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: todos.map(todo => {\n        return /*#__PURE__*/_jsxDEV(TodoItem, {\n          todo: todo\n        }, todo._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 32\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"todo\",\n        children: \"Enter Todo Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"todo\",\n        placeholder: \"Please Enter Todo Item\",\n        value: todo.name,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-lg btn-primary btn-block\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), message ? /*#__PURE__*/_jsxDEV(Message, {\n      message: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 24\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Todos, \"tRC/CAbiehS4lNzkCzDgNiElC8I=\");\n\n_c = Todos;\nexport default Todos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"sources":["/Users/yunshine/Code/yunshine/React-101/React-Apps/mern-authentication/client/src/Components/Todos.js"],"names":["React","useState","useContext","useEffect","TodoItem","Message","TodoService","AuthContext","Todos","props","todo","setTodo","name","todos","setTodos","message","setMessage","getTodos","then","data","onSubmit","e","preventDefault","postTodo","resetForm","msgError","getData","msgBody","setUser","username","role","setIsAuthenticaged","onChange","target","value","map","_id"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport TodoItem from './TodoItem';\nimport Message from './Message';\nimport TodoService from '../Services/TodoService';\nimport { AuthContext } from '../Context/AuthContext';\n\nconst Todos = (props) => {\n    const [todo, setTodo] = useState({ name: \"\" });\n    const [todos, setTodos] = useState([]);\n    const [message, setMessage] = useState(null);\n    const AuthContext = useContext(AuthContext);\n\n    useEffect(() => {\n        TodoService.getTodos().then(data => {\n            setTodos(data.todos);\n        });\n    }, []);\n\n    const onSubmit = e => {\n        e.preventDefault();\n        TodoService.postTodo(todo).then(data => {\n            const { message } = data;\n            resetForm();\n            if (!message.msgError) {\n                TodoService.getTodos().then(getData => {\n                    setTodos(getData.todos);\n                    setMessage(message);\n                });\n            } else if (message.msgBody === \"unauthorized\") {\n                setMessage(message);\n                AuthContext.setUser({ username: \"\", role: \"\" });\n                AuthContext.setIsAuthenticaged(false);\n            } else {\n                setMessage(message);\n            }\n        });\n    }\n\n    const onChange = e => {\n        setTodo({ name: e.target.value });\n    }\n\n    const resetForm = () => {\n        setTodo({ name: \"\" });\n    }\n\n    return (\n        <div>\n            <ul className=\"list-group\">\n                {\n                    todos.map(todo => {\n                        return <TodoItem key={todo._id} todo={todo} />\n                    })\n                }\n            </ul>\n            <br />\n            <form onSubmit={onSubmit}>\n                <label htmlFor=\"todo\">Enter Todo Item</label>\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"todo\"\n                    placeholder=\"Please Enter Todo Item\"\n                    value={todo.name}\n                    onChange={onChange} />\n                <button type=\"submit\" className=\"btn btn-lg btn-primary btn-block\">Submit</button>\n            </form>\n            {message ? <Message message={message} /> : null}\n        </div>\n    );\n}\n\nexport default Todos;"]},"metadata":{},"sourceType":"module"}