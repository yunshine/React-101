{"ast":null,"code":"var _jsxFileName = \"/Users/yunshine/Code/yunshine/React-101/React-Apps/mern-authentication/client/src/Components/Register.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useEffect } from 'react';\nimport AuthService from '../Services/AuthService';\nimport Message from './Message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = props => {\n  _s();\n\n  const [user, setUser] = useState({\n    username: '',\n    password: '',\n    role: ''\n  });\n  const [message, setMessage] = useState(null);\n  let timerID = useRef(null);\n  useEffect(() => {\n    return () => {\n      clearTimeout(timerID);\n    };\n  }, []);\n\n  const resetForm = () => {\n    console.log(\"resetForm function called...\");\n    setUser({\n      username: \"\",\n      pasword: \"\",\n      role: \"\"\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    console.log(\"form submitted...\");\n    AuthService.register(user).then(data => {\n      console.log(\"Data from Register.js: \", data);\n      const {\n        message\n      } = data;\n      setMessage(message);\n      resetForm();\n\n      if (!message.msgError) {\n        timerID = setTimeout(() => {\n          props.history.push('/login');\n        }, 2000);\n      }\n    });\n  };\n\n  const onChange = e => {\n    setUser({ ...user,\n      [e.target.name]: e.target.value\n    });\n    console.log(\"from onChange: \", user);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Please Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        className: \"sr-only\",\n        children: \"Username: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: user.username,\n        onChange: onChange,\n        className: \"form-control\",\n        placeholder: \"Enter Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        className: \"sr-only\",\n        children: \"Password: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: user.password,\n        onChange: onChange,\n        className: \"form-control\",\n        placeholder: \"Enter Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"role\",\n        className: \"sr-only\",\n        children: \"Role: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"role\",\n        value: user.role,\n        onChange: onChange,\n        className: \"form-control\",\n        placeholder: \"Enter Role (admin/user)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-lg btn-primary btn-block\",\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), message ? /*#__PURE__*/_jsxDEV(Message, {\n      message: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 24\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"wT8j/y3DtG2He87oYWBgnxcSlDE=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/yunshine/Code/yunshine/React-101/React-Apps/mern-authentication/client/src/Components/Register.js"],"names":["useState","useRef","useEffect","AuthService","Message","Register","props","user","setUser","username","password","role","message","setMessage","timerID","clearTimeout","resetForm","console","log","pasword","onSubmit","e","preventDefault","register","then","data","msgError","setTimeout","history","push","onChange","target","name","value"],"mappings":"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","sourcesContent":["import { useState, useRef, useEffect } from 'react';\nimport AuthService from '../Services/AuthService';\nimport Message from './Message';\n\nconst Register = (props) => {\n    const [user, setUser] = useState({ username: '', password: '', role: '' });\n    const [message, setMessage] = useState(null);\n    let timerID = useRef(null);\n\n    useEffect(() => {\n        return () => {\n            clearTimeout(timerID);\n        };\n    }, []);\n\n    const resetForm = () => {\n        console.log(\"resetForm function called...\");\n        setUser({ username: \"\", pasword: \"\", role: \"\" });\n    }\n\n    const onSubmit = e => {\n        e.preventDefault();\n        console.log(\"form submitted...\");\n        AuthService.register(user).then(data => {\n            console.log(\"Data from Register.js: \", data);\n            const { message } = data;\n            setMessage(message);\n            resetForm();\n            if (!message.msgError) {\n                timerID = setTimeout(() => {\n                    props.history.push('/login');\n                }, 2000);\n            }\n        });\n    }\n\n    const onChange = e => {\n        setUser({ ...user, [e.target.name]: e.target.value });\n        console.log(\"from onChange: \", user);\n    }\n\n    return (\n        <div>\n            <form onSubmit={onSubmit}>\n                <h3>Please Register</h3>\n                <label htmlFor=\"username\" className=\"sr-only\">Username: </label>\n                <input type=\"text\"\n                    name=\"username\"\n                    value={user.username}\n                    onChange={onChange}\n                    className=\"form-control\"\n                    placeholder=\"Enter Username\" />\n                <label htmlFor=\"password\" className=\"sr-only\">Password: </label>\n                <input type=\"password\"\n                    name=\"password\"\n                    value={user.password}\n                    onChange={onChange}\n                    className=\"form-control\"\n                    placeholder=\"Enter Password\" />\n                <label htmlFor=\"role\" className=\"sr-only\">Role: </label>\n                <input type=\"text\"\n                    name=\"role\"\n                    value={user.role}\n                    onChange={onChange}\n                    className=\"form-control\"\n                    placeholder=\"Enter Role (admin/user)\" />\n                <button className=\"btn btn-lg btn-primary btn-block\"\n                    type=\"submit\">Register</button>\n            </form>\n\n            {message ? <Message message={message} /> : null}\n        </div>\n    );\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}