{"ast":null,"code":"var _jsxFileName = \"/Users/yunshine/Code/yunshine/React-101/React-Apps/mern-authentication/client/src/HigherOrderComponents/UnPrivateRoute.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router\";\nimport { AuthContext } from \"../Context/AuthContext\"; // This component checks to see if you're logged in so that you don't have to ever see the login page or the register page because it wouldn't make sense to see those pages...\n// destructured props parameter and renamed...\n// const UnPrivateRoute = (props) => {\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UnPrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  _s();\n\n  const {\n    isAuthenticated\n  } = useContext(AuthContext);\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      if (isAuthenticated) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: \"/home\",\n            state: {\n              from: props.location\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 24\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 20\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UnPrivateRoute, \"V63do9pNTv1q4M9O8C9qYlm3TOw=\");\n\n_c = UnPrivateRoute;\nexport default UnPrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"UnPrivateRoute\");","map":{"version":3,"sources":["/Users/yunshine/Code/yunshine/React-101/React-Apps/mern-authentication/client/src/HigherOrderComponents/UnPrivateRoute.js"],"names":["useContext","Route","Redirect","AuthContext","UnPrivateRoute","component","Component","rest","isAuthenticated","props","pathname","state","from","location"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,cAAhC;AACA,SAASC,WAAT,QAA4B,wBAA5B,C,CAEA;AAEA;AACA;;;;AACA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAAA;;AAC1D,QAAM;AAAEC,IAAAA;AAAF,MAAsBR,UAAU,CAACG,WAAD,CAAtC;AAEA,sBACI,QAAC,KAAD,OAAWI,IAAX;AAAiB,IAAA,MAAM,EAAEE,KAAK,IAAI;AAC9B,UAAID,eAAJ,EAAqB;AACjB,4BAAO,QAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAAEE,YAAAA,QAAQ,EAAE,OAAZ;AAAqBC,YAAAA,KAAK,EAAE;AAAEC,cAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAA5B;AAAd;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH;;AAED,0BAAO,QAAC,SAAD,OAAeJ;AAAf;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;AAND;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAZD;;GAAML,c;;KAAAA,c;AAcN,eAAeA,cAAf","sourcesContent":["import { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router\";\nimport { AuthContext } from \"../Context/AuthContext\";\n\n// This component checks to see if you're logged in so that you don't have to ever see the login page or the register page because it wouldn't make sense to see those pages...\n\n// destructured props parameter and renamed...\n// const UnPrivateRoute = (props) => {\nconst UnPrivateRoute = ({ component: Component, ...rest }) => {\n    const { isAuthenticated } = useContext(AuthContext);\n\n    return (\n        <Route {...rest} render={props => {\n            if (isAuthenticated) {\n                return <Redirect to={{ pathname: \"/home\", state: { from: props.location } }} />\n            }\n\n            return <Component {...props} />\n        }} />\n    )\n}\n\nexport default UnPrivateRoute;"]},"metadata":{},"sourceType":"module"}