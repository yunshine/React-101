{"ast":null,"code":"var _jsxFileName = \"/Users/yunshine/Code/yunshine/React-101/React-Apps/mern-authentication/client/src/HigherOrderComponents/PrivateRoute.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router\";\nimport { AuthContext } from \"../Context/AuthContext\"; // This component protects the routes that you should be logged in for...\n// destructured props parameter and renamed...\n// const PrivateRoute = (props) => {\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  component: Component,\n  roles,\n  ...rest\n}) => {\n  _s();\n\n  const {\n    isAuthenticated,\n    user\n  } = useContext(AuthContext);\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      if (!isAuthenticated) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: \"/login\",\n            state: {\n              from: props.location\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 24\n        }, this);\n      }\n\n      if (!roles.includes(user.role)) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: \"/\",\n            state: {\n              from: props.location\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 24\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 20\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PrivateRoute, \"COqImUGpkN3Vyz0GbxPCPNJel14=\");\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/yunshine/Code/yunshine/React-101/React-Apps/mern-authentication/client/src/HigherOrderComponents/PrivateRoute.js"],"names":["useContext","Route","Redirect","AuthContext","PrivateRoute","component","Component","roles","rest","isAuthenticated","user","props","pathname","state","from","location","includes","role"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,cAAhC;AACA,SAASC,WAAT,QAA4B,wBAA5B,C,CACA;AAEA;AACA;;;;AACA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,KAAxB;AAA+B,KAAGC;AAAlC,CAAD,KAA8C;AAAA;;AAC/D,QAAM;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAA4BV,UAAU,CAACG,WAAD,CAA5C;AAEA,sBACI,QAAC,KAAD,OAAWK,IAAX;AAAiB,IAAA,MAAM,EAAEG,KAAK,IAAI;AAC9B,UAAI,CAACF,eAAL,EAAsB;AAClB,4BAAO,QAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAAEG,YAAAA,QAAQ,EAAE,QAAZ;AAAsBC,YAAAA,KAAK,EAAE;AAAEC,cAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAA7B;AAAd;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH;;AAED,UAAI,CAACR,KAAK,CAACS,QAAN,CAAeN,IAAI,CAACO,IAApB,CAAL,EAAgC;AAC5B,4BAAO,QAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAAEL,YAAAA,QAAQ,EAAE,GAAZ;AAAiBC,YAAAA,KAAK,EAAE;AAAEC,cAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAAxB;AAAd;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH;;AAED,0BAAO,QAAC,SAAD,OAAeJ;AAAf;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;AAVD;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAhBD;;GAAMP,Y;;KAAAA,Y;AAkBN,eAAeA,YAAf","sourcesContent":["import { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router\";\nimport { AuthContext } from \"../Context/AuthContext\";\n// This component protects the routes that you should be logged in for...\n\n// destructured props parameter and renamed...\n// const PrivateRoute = (props) => {\nconst PrivateRoute = ({ component: Component, roles, ...rest }) => {\n    const { isAuthenticated, user } = useContext(AuthContext);\n\n    return (\n        <Route {...rest} render={props => {\n            if (!isAuthenticated) {\n                return <Redirect to={{ pathname: \"/login\", state: { from: props.location } }} />\n            }\n\n            if (!roles.includes(user.role)) {\n                return <Redirect to={{ pathname: \"/\", state: { from: props.location } }} />\n            }\n\n            return <Component {...props} />\n        }} />\n    )\n}\n\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}